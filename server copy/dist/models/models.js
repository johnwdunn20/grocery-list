"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _mongoose=_interopRequireDefault(require("mongoose"));require("dotenv/config");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var MONGO_DB_URI=process.env.MONGO_DB_URI||"";_mongoose["default"].connect(MONGO_DB_URI,{dbName:"groceries"})["catch"](function(err){return console.log("Error connecting to mongo: ",err)});var Schema=_mongoose["default"].Schema;var usersSchema=new Schema({name:{type:String,required:true},email:{type:String,required:true,unique:true},password:{type:String,required:true}});var User=_mongoose["default"].model("user",usersSchema);var sessionsSchema=new Schema({user:{type:_mongoose["default"].Types.ObjectId,ref:"user"},token:{type:String,required:true},createdAt:{type:Date,"default":Date.now,expires:typeof process.env.JWT_EXPIRATION==="number"?Number(process.env.JWT_EXPIRATION)/60:10000000000/60}});var Session=_mongoose["default"].model("session",sessionsSchema);var itemSchema=new Schema({user:{type:_mongoose["default"].Types.ObjectId,ref:User},itemName:{type:String,required:true},checked:{type:Boolean,"default":false}});var Item=_mongoose["default"].model("item",itemSchema);var grocerySchema=new Schema({user:{type:_mongoose["default"].Types.ObjectId,ref:User},category:{type:String,required:true},items:[itemSchema],isHistory:{type:Boolean,"default":false},historyDate:{type:Date,"default":Date.now}});var Grocery=_mongoose["default"].model("grocery",grocerySchema);var _default=exports["default"]={User:User,Grocery:Grocery,Item:Item,Session:Session};